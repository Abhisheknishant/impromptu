#!/usr/bin/env bash

source $IMPROMPTU_BIN/impromptu-utils

# `update_terminal_cwd` is an OS X specific command that ensures Terminal.app
# maintains the correct directory when a new tab is opened (if that setting is
# enabled). This is usually bound to `$PROMPT_COMMAND`, but is overwritten when
# we rebind `$PROMPT_COMMAND`. We need to run `update_terminal_cwd` first, or
# else it will interfere with the cursoring in bash.
if [ "$(type -t update_terminal_cwd 2>/dev/null)" ]; then
  update_terminal_cwd
fi

impromptu_ensure_constants

# Record the shell's environment.
request_env="$(printenv)
IMPROMPTU_LAST_EXIT_CODE=$IMPROMPTU_LAST_EXIT_CODE
IMPROMPTU_JOBS_COUNT=`jobs|wc -l|sed 's/ //g'`"

# Set the current shell.
if [ -n "$1" ]; then
  request_env+="
IMPROMPTU_SHELL=$1"
fi

generate_prompt() {
  if [[ -n "$IMPROMPTU_UNIX_DOMAIN_SOCKET" ]]; then
    echo -n "$request_env" | nc -w 1 -U "$IMPROMPTU_UNIX_DOMAIN_SOCKET"
  else
    echo -n "$request_env" | nc -w 1 localhost "$IMPROMPTU_PORT"
  fi
}

# Record the result of the generated prompt.
generated_prompt=$(generate_prompt)

# If the prompt errored or returned nothing, the server is no longer running.
if [[ $? != 0 || -z $generated_prompt ]]; then
  echo "Attempting to start Impromptu server..."
  impromptu_ensure_server

  if [[ "$?" -ne 0 ]]; then
    echo "The Impromptu server failed to start. Falling back to the CLI..."
    echo "Use the --no-server flag to use the CLI by default."
    $IMPROMPTU_BIN/impromptu-node-cli
  else
    generate_prompt
  fi
elif [[ -n $generated_prompt ]]; then
  echo -n "$generated_prompt"
fi
